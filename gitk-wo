#!/bin/sh

source /usr/bin/gitk

# getblobdiffs: Replace gitk's original
rename getblobdiffs orig_getblobdiffs
proc getblobdiffs {ids} {
    create_ui
    orig_getblobdiffs $ids

    global blobdifffd diffids env
    global treediffs
    global diffcontext
    global ignorespace
    global limitdiffs vfilelimit curview
    global git_version
    global diffcmdnocc

    set textconv {}
    if {[package vcompare $git_version "1.6.1"] >= 0} {
	set textconv "--textconv"
    }
    set submodule {}
    if {[package vcompare $git_version "1.6.6"] >= 0} {
	set submodule "--submodule"
    }
    set cmd [diffcmd $ids "-p $textconv $submodule  -C --cc --no-commit-id -U$diffcontext"]
    if {$ignorespace} {
	append cmd " -w"
    }
    append cmd " --word-diff=porcelain"
    if {$limitdiffs && $vfilelimit($curview) ne {}} {
	set cmd [concat $cmd -- $vfilelimit($curview)]
    }

    set cmdnopp [string trimleft $cmd |]
    regsub { --cc } $cmdnopp { } diffcmdnocc

    load_graph ""
}

# clear_ctext: Replace gitk's original
rename clear_ctext orig_clear_ctext
proc clear_ctext {{first 1.0}} {
    orig_clear_ctext $first
    clear_previous_image
}

proc create_ui {} {
    global NS
    global imap
    global brightdiagram

    if {[info exists brightdiagram]} {
	return
    }

    set brightdiagram [${NS}::frame .bright.diagram]
    set img [label .bright.diagram.img]
    pack $img -anchor nw
    pack forget .bright.cfiles
    pack .bright.diagram -side right -fill both -expand 1
    pack .bright.cfiles -side left -fill y -expand 0

    bind .bright.diagram.img <ButtonRelease> {
	dict for {id val} $imap {
	    dict with val {
		if {%x >= $left && %x <= $right && %y >= $top && %y <= $bottom} {
		    {*}$evalable
		}
	    }
	}
    }
}

proc clear_previous_image {} {
    global imap

    if {[info exists imap]} {
	diagram_img blank
    }
}

proc load_graph {params} {
    generate_img $params
    load_img "words"
}

proc generate_img {params} {
    global diffcmdnocc

    set width [expr { ( [winfo width .bright.diagram] + [winfo width .bright.cfiles] ) * 0.85 }]
    set height [winfo height .bright.diagram]
    set cmd [concat $diffcmdnocc | diffwords --width $width --height $height]
    if {[catch {puts [exec sh -c "$cmd $params"]} err]} {
	error_popup [format "error creating diff graph:\n%.400s..." $err]
    }
}

proc load_img {imgpath} {
    global imap

    image create photo diagram_img -file "$imgpath.png"
    .bright.diagram.img configure -image diagram_img

    set imap [dict create]
    set file [open "$imgpath.imap_np"]
    while {[gets $file line] > -1} {
	if {[regexp "^rect gitk:(.*) (\\d+),(\\d+) (\\d+),(\\d+)$" $line match evalable left top right bottom]} {
	    dict set imap $match left $left
	    dict set imap $match top $top
	    dict set imap $match right $right
	    dict set imap $match bottom $bottom
	    dict set imap $match evalable $evalable
	}
    }
    close $file
}

proc search_next {search_term} {
    # Called by evalable
    global searchstring

    set searchstring $search_term
    dosearch
}

proc search_prev {search_term} {
    # Called by evalable
    global searchstring

    set searchstring $search_term
    dosearchback
}

# vim: ft=tcl ts=8 sts=4 sw=4
